# Based on the file created for Arch Linux by:
# Ronald van Haren <ronald.archlinux.org>
# Keshav P R <(the.ridikulus.rat) (aatt) (gemmaeiil) (ddoott) (ccoomm)>

# Maintainer: Guinux <nuxgui@gmail.com>

_grub_bzr_rev="4232"
_pkgver="2.00~beta4"

_grub_lua_ver=24
_grub_gpxe_ver=12
_grub_ntldr_ver=21
_grub_915_ver=9

pkgname=('grub2-common' 'grub2-bios' 'grub2-efi-i386')
pkgbase=grub2
pkgver=2.00beta4
pkgrel=2
url="http://www.gnu.org/software/grub/"
arch=('i686' 'x86_64')
license=('GPL3')
epoch="1"
makedepends=('rsync' 'xz' 'bdf-unifont' 'python' 'autogen' 'texinfo'
	'help2man' 'gettext' 'device-mapper' 'fuse' 'dosfstools' 'efibootmgr')

source=("http://alpha.gnu.org/gnu/grub/grub-${_pkgver}".tar.xz
        "ftp://ftp.archlinux.org/other/grub2/grub2_extras_915resolution_r${_grub_915_ver}.tar.xz"
        "ftp://ftp.archlinux.org/other/grub2/grub2_extras_gpxe_r${_grub_gpxe_ver}.tar.xz"
        "ftp://ftp.archlinux.org/other/grub2/grub2_extras_lua_r${_grub_lua_ver}.tar.xz"
        "ftp://ftp.archlinux.org/other/grub2/grub2_extras_ntldr-img_r${_grub_ntldr_ver}.tar.xz"
        'grub.cfg'
        'grub.default'
        'manjaro_grub2_mkconfig_fixes.patch'
        '20_memtest86+'
        'grub-install.fix'
        'background.png'
	'update-grub')

noextract=("grub2_extras_lua_r${_grub_lua_ver}.tar.xz"
           "grub2_extras_gpxe_r${_grub_gpxe_ver}.tar.xz"
           "grub2_extras_ntldr-img_r${_grub_ntldr_ver}.tar.xz"
           "grub2_extras_915resolution_r${_grub_915_ver}.tar.xz")

sha256sums=('628a17fefafcbd90cdab25220ef3ae717558dde73e55adf83dfee3aae55e390e'
            '04f79ec649764b02444d9bd82b39814bd17f018abf00c8b34bbafa37899c3a3f'
            '8ce1b6b89ef0e3545736477d4c4418524e32c7fb9ba40c67dcebfb84b98cde66'
            'bfe0318a9bb7edbaee2489b1396d0034791751b42035ea40ad61600fdf974df2'
            '2b8b1112b67c2b8d0e46b87fd0a2597461ce4d4c80fc25d0a7319db94b6ac600'
            '7fc95d49c0febe98a76e56b606a280565cb736580adecf163bc6b5aca8e7cbd8'
            '0baf7abdf6ace9b9a863df6345ae5ed6646982f84287ebe5a0823ebc63a06a4c'
            '825f9df5c410cf881a048dd51ac002dd78290f2846693c63767530e1c5cc3c8c'
            'ba0f871ee93760d14d7f19709bb875af4a863a758776a23519ca7100a63da295'
            '97e84a99dd14bf5fb68899d00c900fff5406deb2b5611e255a7bf99696d58e36'
            'c92a3a4de75365152bf1a568c55f5adf880256035bfc993add03b519d0f67046'
            '467b0101154076fee99d9574a5fb6b772a3923cc200a1f4ca08fe17be8d68111')

_build_grub2-common_and_bios() {

	## copy the source for building the common/bios package
	cp -r "${srcdir}/grub-${_pkgver}" "${srcdir}/grub_bios-${_pkgver}"
	cd "${srcdir}/grub_bios-${_pkgver}"

	## Apply Manjaro Linux specific fixes to enable grub-mkconfig detect Manjaro kernels and initramfs
	patch -Np1 -i "${srcdir}/manjaro_grub2_mkconfig_fixes.patch"
	echo

	## upstream grub-install fix
	## http://lists.gnu.org/archive/html/help-grub/2012-04/msg00096.html
	patch -Np0 -i "${srcdir}/grub-install.fix"

	## add the grub-extra sources
	export GRUB_CONTRIB="${srcdir}/grub_bios-${_pkgver}/grub-extras/"
	install -d "${srcdir}/grub_bios-${_pkgver}/grub-extras"

	bsdtar xf "${srcdir}/grub2_extras_lua_r${_grub_lua_ver}.tar.xz" \
		-C "${srcdir}/grub_bios-${_pkgver}/grub-extras"

	bsdtar xf "${srcdir}/grub2_extras_gpxe_r${_grub_gpxe_ver}.tar.xz" \
		-C "${srcdir}/grub_bios-${_pkgver}/grub-extras"

	bsdtar xf "${srcdir}/grub2_extras_ntldr-img_r${_grub_ntldr_ver}.tar.xz" \
		-C "${srcdir}/grub_bios-${_pkgver}/grub-extras"

	bsdtar xf "${srcdir}/grub2_extras_915resolution_r${_grub_915_ver}.tar.xz" \
		-C "${srcdir}/grub_bios-${_pkgver}/grub-extras"

	## Requires python2
	# sed 's|python |python2 |g' -i "${srcdir}/grub_bios-${_pkgver}/autogen.sh"

	## start the actual build process
	cd "${srcdir}/grub_bios-${_pkgver}"
	./autogen.sh

	## fix unifont.bdf location so grub-mkfont can create *.pf2 files
	sed 's|/usr/share/fonts/unifont|/usr/share/fonts/misc|g' -i "${srcdir}/grub_bios-${_pkgver}/configure"

	# install -d "${srcdir}/grub_bios-${_pkgver}/BUILD_BIOS"
	# cd "${srcdir}/grub_bios-${_pkgver}/BUILD_BIOS"

	CFLAGS="" ./configure \
		--with-platform="pc" \
		--target="i386" \
		--host="${CARCH}-unknown-linux-gnu" \
		"${_EFIEMU}" \
		--enable-mm-debug \
		--enable-nls \
		--enable-device-mapper \
		--enable-cache-stats \
		--enable-grub-mkfont \
		--enable-grub-mount \
		--prefix="/usr" \
		--bindir="/usr/bin" \
		--sbindir="/usr/sbin" \
		--mandir="/usr/share/man" \
		--infodir="/usr/share/info" \
                --datadir="/usr/lib" \
		--datarootdir="/usr/share" \
		--sysconfdir="/etc" \
		--program-prefix="" \
		--with-bootdir="/boot" \
		--with-grubdir="grub" \
		--disable-werror

	CFLAGS="" make

}

_build_grub2-efi-i386() {

	## copy the source for building the efi package
	cp -r "${srcdir}/grub-${_pkgver}" "${srcdir}/grub_efi-${_pkgver}"
	cd "${srcdir}/grub_efi-${_pkgver}"

	export GRUB_CONTRIB="${srcdir}/grub_efi-${_pkgver}/grub-extras/"
	install -d "${srcdir}/grub_efi-${_pkgver}/grub-extras"

	bsdtar xf "${srcdir}/grub2_extras_lua_r${_grub_lua_ver}.tar.xz" \
		-C "${srcdir}/grub_efi-${_pkgver}/grub-extras"

	bsdtar xf "${srcdir}/grub2_extras_gpxe_r${_grub_gpxe_ver}.tar.xz" \
		-C "${srcdir}/grub_efi-${_pkgver}/grub-extras"

	## Requires python2
	# sed 's|python |python2 |g' -i "${srcdir}/grub_efi-${_pkgver}/autogen.sh"

	cd "${srcdir}/grub_efi-${_pkgver}"
	./autogen.sh

	CFLAGS="" ./configure \
		--with-platform="efi" \
		--target="i386" \
		--host="${CARCH}-unknown-linux-gnu" \
		--disable-efiemu \
		--enable-mm-debug \
		--enable-nls \
		--enable-device-mapper \
		--enable-cache-stats \
		--enable-grub-mkfont \
		--enable-grub-mount \
		--prefix="/usr" \
		--bindir="/usr/bin" \
		--sbindir="/usr/sbin" \
		--mandir="/usr/share/man" \
		--infodir="/usr/share/info" \
		--datarootdir="/usr/share" \
		--sysconfdir="/etc" \
		--program-prefix="" \
		--with-bootdir="/boot" \
		--with-grubdir="grub" \
		--disable-werror

	CFLAGS="" make
}

#_get_locale_files() {
#
#	cd "${srcdir}/grub-${_pkgver}"
#	rsync -Lrtvz translationproject.org::tp/latest/grub/ "${srcdir}/grub-${_pkgver}/po" || true
#	(cd "${srcdir}/grub-${_pkgver}/po" && ls *.po | cut -d. -f1 | xargs) > "${srcdir}/grub-${_pkgver}/po/LINGUAS"
#}

build() {

	## set architecture dependent variables
	if [[ "${CARCH}" == 'x86_64' ]]; then
		_EFIEMU="--enable-efiemu"
	else
		_EFIEMU="--disable-efiemu"
	fi

	_HOST="${CARCH}"

	cd "${srcdir}/grub-${_pkgver}"
	# _get_locale_files

	_build_grub2-common_and_bios
	_build_grub2-efi-i386

}

package_grub2-common() {

	pkgdesc="The GNU GRand Unified Bootloader version 2 - Files common for all platforms"
	depends=('xz' 'freetype2' 'gettext' 'device-mapper' 'fuse' 'sh')
	conflicts=('grub' 'grub2')
        replaces=('grub2')
	backup=('boot/grub/grub.cfg' 'etc/default/grub' 'etc/grub.d/40_custom')
	optdepends=('libisoburn: provides xorriso for generating grub rescue iso using grub-mkrescue'
	            'os-prober: to detect other OSes when generating grub.cfg in BIOS systems'
	            'mtools: for grub-mkrescue FAT FS support')
	install="grub2.install"
	options=('strip' 'purge' 'docs' 'zipman' '!emptydirs')

	cd "${srcdir}/grub_bios-${_pkgver}"
	make DESTDIR="${pkgdir}/" install

	## install extra /etc/grub.d/ files
	install -D -m0755 "${srcdir}/20_memtest86+" "${pkgdir}/etc/grub.d/20_memtest86+"

	## install /etc/default/grub (used by grub-mkconfig)
	install -D -m0644 "${srcdir}/grub.default" "${pkgdir}/etc/default/grub"

	## install grub.cfg (needed so it doesn't get removed on upgrading because it was previously here)
	install -D -m0644 "${srcdir}/grub.cfg" "${pkgdir}/boot/grub/grub.cfg"

	## install update-grub
	install -Dm755 "${srcdir}/update-grub" "${pkgdir}/sbin/update-grub"

	## install grub background
	install -Dm644 "${srcdir}/background.png" "${pkgdir}/usr/share/grub/background.png"

	# remove platform specific files
	rm -rf "${pkgdir}/usr/lib/grub/i386-pc/"

}

package_grub2-bios() {

	pkgdesc="The GNU GRand Unified Bootloader version 2 - Built for i386 PC BIOS"
	depends=("grub2-common=${epoch}:${pkgver}")
	options=('!strip' '!emptydirs')
	conflicts=('grub2')
        replaces=('grub2')

	cd "${srcdir}/grub_bios-${_pkgver}"
	make DESTDIR="${pkgdir}/" install

	## remove non platform-specific files
	rm -rf "${pkgdir}"/{boot,etc,usr/{share,bin,sbin}}

	## remove gdb debugging related files
	rm -f "${pkgdir}/usr/lib/grub/i386-pc"/*.module || true
	rm -f "${pkgdir}/usr/lib/grub/i386-pc"/*.image || true
	rm -f "${pkgdir}/usr/lib/grub/i386-pc"/{kernel.exec,gdb_grub,gmodule.pl} || true

        ## remove conflicting common files
	rm -fr "${pkgdir}/usr/lib/grub/themes"
	rm -f "${pkgdir}/usr/lib/grub/"*.h
	rm -f "${pkgdir}/usr/lib/grub/"*.pf2
	rm -f "${pkgdir}/usr/lib/grub/grub-mkconfig_lib"
}

package_grub2-efi-i386() {

	pkgdesc="The GNU GRand Unified Bootloader version 2 - i386 UEFI version"
	depends=("grub2-common=${epoch}:${pkgver}" 'dosfstools' 'efibootmgr')
	options=('!strip' '!emptydirs')

	cd "${srcdir}/grub_efi-${_pkgver}"
	make DESTDIR="${pkgdir}/" install

	## remove non platform-specific files
	rm -rf "${pkgdir}"/{boot,etc,usr/{share,bin,sbin}}

	## remove gdb debugging related files
	rm -f "${pkgdir}/usr/lib/grub/i386-efi"/*.module || true
	rm -f "${pkgdir}/usr/lib/grub/i386-efi"/*.image || true
	rm -f "${pkgdir}/usr/lib/grub/i386-efi"/{kernel.exec,gdb_grub,gmodule.pl} || true

}
