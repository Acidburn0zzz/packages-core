--- a/scripts/rankmirrors.sh.in	2011-10-12 21:04:25.000000000 +0200
+++ b/scripts/rankmirrors.sh.in	2012-08-16 13:26:17.718893567 +0200
@@ -4,6 +4,7 @@
 #   @configure_input@
 #
 #   Copyright (c) 2009 Matthew Bruenig <matthewbruenig@gmail.com>
+#   Modified for Manjaro by Philip MÃ¼ller <philm@manajro.org>
 #
 #   This program is free software; you can redistribute it and/or modify
 #   it under the terms of the GNU General Public License as published by
@@ -53,7 +54,7 @@ err() {
 	exit 1
 }
 
-# gettime fetchurl (e.g gettime http://foo.com/core/os/i686/core.db.tar.gz)
+# gettime fetchurl (e.g gettime http://foo.com/platform/i686/platform.db.tar.gz)
 # returns the fetching time, or timeout, or unreachable
 gettime() {
 	IFS=' ' output=( $(curl -s -m 10 -w "%{time_total} %{http_code}" "$1" -o/dev/null) )
@@ -62,17 +63,17 @@ gettime() {
 	echo "${output[0]}"
 }
 
-# getfetchurl serverurl (e.g. getturl http://foo.com/core/os/i686)
-# if $repo is in the line, then assumes core
+# getfetchurl serverurl (e.g. getturl http://foo.com/platform/i686)
+# if $repo is in the line, then assumes platform
 # if $arch is in the line, then assumes $(uname -m)
-# returns a fetchurl (e.g. http://foo.com/core/os/i686/core.db.tar.gz)
+# returns a fetchurl (e.g. http://foo.com/platform/i686/platform.db.tar.gz)
 ARCH="$(uname -m)"
 getfetchurl() {
 	local strippedurl="${1%/}"
 
 	local replacedurl="${strippedurl//'$arch'/$ARCH}"
 	if [[ ! $TARGETREPO ]]; then
-		replacedurl="${replacedurl//'$repo'/core}"
+		replacedurl="${replacedurl//'$repo'/platform}"
 		local tmp="${replacedurl%/*}"
 		tmp="${tmp%/*}"
 
